name: CI
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        target:
          - os: linux
            cpu: amd64
          - os: macos
            cpu: amd64
          - os: windows
            cpu: amd64
        branch: [version-1-6]
        include:
          - target:
              os: linux
            builder: ubuntu-20.04
            shell: bash
          - target:
              os: macos
            builder: macos-12
            shell: bash
          - target:
              os: windows
            builder: windows-2019
            shell: msys2 {0}

    defaults:
      run:
        shell: ${{ matrix.shell }}

    name: '${{ matrix.target.os }}-${{ matrix.target.cpu }} (Nim ${{ matrix.branch }})'
    runs-on: ${{ matrix.builder }}
    continue-on-error: ${{ matrix.branch == 'version-1-6' || matrix.branch == 'devel' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Derive environment variables
        run: |
          if [[ '${{ matrix.target.cpu }}' == 'amd64' ]]; then
            PLATFORM=x64
          else
            PLATFORM=x86
          fi
          echo "PLATFORM=$PLATFORM" >> $GITHUB_ENV

          ncpu=
          MAKE_CMD="make"
          case '${{ runner.os }}' in
          'Linux')
            ncpu=$(nproc)
            ;;
          'macOS')
            ncpu=$(sysctl -n hw.ncpu)
            ;;
          'Windows')
            ncpu=$NUMBER_OF_PROCESSORS
            MAKE_CMD="mingw32-make"
            ;;
          esac
          [[ -z "$ncpu" || $ncpu -le 0 ]] && ncpu=1
          echo "ncpu=$ncpu" >> $GITHUB_ENV
          echo "MAKE_CMD=${MAKE_CMD}" >> $GITHUB_ENV

      - uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: 1.6.14
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Setup Paths
      #   run: |
      #     echo 'NIMBLE_DIR=${{ github.workspace }}/.nimble' >> $GITHUB_ENV

      # - name: Setup Nimble
      #   uses: "./.github/actions/install_nimble"
      #   with:
      #     os: ${{ matrix.target.os }}
      #     cpu: ${{ matrix.target.cpu }}

      - name: Restore nimble dependencies from cache
        id: nimble_deps
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }} / .nimble
          key: ${{ matrix.target.os }}-${{ matrix.target.cpu }}-dotnimble-${{ hashFiles('nimble.lock') }}

      - name: Check ENV
        run: |
          echo ENV:
          env

          nim -v
          nimble -v

          nimble install -y nimble@0.14.2
          nimble -v

      - name: Setup Deps
        run: |
          nimble install -d -y

      - name: Run tests
        run: |
          if [[ "${{ matrix.target.os }}" == "windows" ]]; then
            # https://github.com/status-im/nimbus-eth2/issues/3121
            export NIMFLAGS="-d:nimRawSetjmp"
          fi

          nimble test -y

          if [[ "${{ matrix.branch }}" == "version-1-6" || "${{ matrix.branch }}" == "devel" ]]; then
            echo -e "\nTesting with '--gc:orc':\n"
            export NIMFLAGS="${NIMFLAGS} --gc:orc"
            nimble test -y
          fi;
